Sistema operativo utilizado
Linux debian11mate 5.10.0-21-amd64 #1 SMP Debian 5.10.162-1 (2023-01-21) x86_64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -DSANITIZE -Wall -Werror -pedantic -std=c2x -Wno-unused-function  test-comprimir.c comprimir.c -lm -o comprimir.bin-san
./comprimir.bin-san
Tests unitarios
============= Arreglo ====================
a[0]=0 a[1]=0 a[2]=0 a[3]=0 a[4]=0 a[5]=0 a[6]=0 a[7]=0 a[8]=0 a[9]=0 a[10]=0 a[11]=0 a[12]=0 a[13]=0 a[14]=0 a[15]=0 a[16]=0 a[17]=0 a[18]=0 a[19]=0 a[20]=0 a[21]=0 a[22]=0 a[23]=0 a[24]=0 a[25]=0 a[26]=0 a[27]=0 a[28]=0 a[29]=0 a[30]=0 a[31]=0 
Resultado es: 0
============= Arreglo ====================
a[0]=00 a[1]=00 a[2]=00 a[3]=00 a[4]=00 a[5]=00 a[6]=00 a[7]=00 a[8]=00 a[9]=00 a[10]=00 a[11]=00 a[12]=00 a[13]=00 a[14]=00 a[15]=00 
Resultado es: 0
============= Arreglo ====================
a[0]=000 a[1]=000 a[2]=000 a[3]=000 a[4]=000 a[5]=000 a[6]=000 a[7]=000 a[8]=000 a[9]=000 
Resultado es: 0
============= Arreglo ====================
a[0]=00000000000000000000000000000000 
Resultado es: 0
============= Arreglo ====================
a[0]=1 a[1]=1 a[2]=1 a[3]=1 a[4]=1 a[5]=1 a[6]=1 a[7]=1 a[8]=1 a[9]=1 a[10]=1 a[11]=1 a[12]=1 a[13]=1 a[14]=1 a[15]=1 a[16]=1 a[17]=1 a[18]=1 a[19]=1 a[20]=1 a[21]=1 a[22]=1 a[23]=1 a[24]=1 a[25]=1 a[26]=1 a[27]=1 a[28]=1 a[29]=1 a[30]=1 a[31]=1 
Resultado es: 11111111111111111111111111111111
============= Arreglo ====================
a[0]=1111111 a[1]=1111111 a[2]=1111111 a[3]=1111111 
Resultado es: 1111111111111111111111111111
============= Arreglo ====================
a[0]=11111111111111111111111 
Resultado es: 11111111111111111111111
============= Arreglo ====================
a[0]=11111111111111111111111111111111 
Resultado es: 11111111111111111111111111111111
============= Arreglo ====================
a[0]=0000 a[1]=0001 a[2]=0011 a[3]=0010 a[4]=0101 a[5]=0111 a[6]=1100 a[7]=1111 
Resultado es: 1001100100101011111001111
============= Arreglo ====================
a[0]=111 a[1]=110 a[2]=101 a[3]=100 a[4]=011 a[5]=010 a[6]=001 a[7]=000 a[8]=111 a[9]=001 
Resultado es: 111110101100011010001000111001
============= Arreglo ====================
a[0]=00001 a[1]=10011 a[2]=11000 a[3]=10001 a[4]=11111 a[5]=11010 
Resultado es: 11001111000100011111111010
============= Arreglo ====================
a[0]=101011000 a[1]=101101011 a[2]=001010000 
Resultado es: 101011000101101011001010000


Tests de 100000000 llamadas aleatorias a comprimir

Bien, felicitaciones
==== run-g ====
gcc -g -Wall -Werror -pedantic -std=c2x -Wno-unused-function  test-comprimir.c comprimir.c -lm -o comprimir.bin-g
./comprimir.bin-g
Tests unitarios
============= Arreglo ====================
a[0]=0 a[1]=0 a[2]=0 a[3]=0 a[4]=0 a[5]=0 a[6]=0 a[7]=0 a[8]=0 a[9]=0 a[10]=0 a[11]=0 a[12]=0 a[13]=0 a[14]=0 a[15]=0 a[16]=0 a[17]=0 a[18]=0 a[19]=0 a[20]=0 a[21]=0 a[22]=0 a[23]=0 a[24]=0 a[25]=0 a[26]=0 a[27]=0 a[28]=0 a[29]=0 a[30]=0 a[31]=0 
Resultado es: 0
============= Arreglo ====================
a[0]=00 a[1]=00 a[2]=00 a[3]=00 a[4]=00 a[5]=00 a[6]=00 a[7]=00 a[8]=00 a[9]=00 a[10]=00 a[11]=00 a[12]=00 a[13]=00 a[14]=00 a[15]=00 
Resultado es: 0
============= Arreglo ====================
a[0]=000 a[1]=000 a[2]=000 a[3]=000 a[4]=000 a[5]=000 a[6]=000 a[7]=000 a[8]=000 a[9]=000 
Resultado es: 0
============= Arreglo ====================
a[0]=00000000000000000000000000000000 
Resultado es: 0
============= Arreglo ====================
a[0]=1 a[1]=1 a[2]=1 a[3]=1 a[4]=1 a[5]=1 a[6]=1 a[7]=1 a[8]=1 a[9]=1 a[10]=1 a[11]=1 a[12]=1 a[13]=1 a[14]=1 a[15]=1 a[16]=1 a[17]=1 a[18]=1 a[19]=1 a[20]=1 a[21]=1 a[22]=1 a[23]=1 a[24]=1 a[25]=1 a[26]=1 a[27]=1 a[28]=1 a[29]=1 a[30]=1 a[31]=1 
Resultado es: 11111111111111111111111111111111
============= Arreglo ====================
a[0]=1111111 a[1]=1111111 a[2]=1111111 a[3]=1111111 
Resultado es: 1111111111111111111111111111
============= Arreglo ====================
a[0]=11111111111111111111111 
Resultado es: 11111111111111111111111
============= Arreglo ====================
a[0]=11111111111111111111111111111111 
Resultado es: 11111111111111111111111111111111
============= Arreglo ====================
a[0]=0000 a[1]=0001 a[2]=0011 a[3]=0010 a[4]=0101 a[5]=0111 a[6]=1100 a[7]=1111 
Resultado es: 1001100100101011111001111
============= Arreglo ====================
a[0]=111 a[1]=110 a[2]=101 a[3]=100 a[4]=011 a[5]=010 a[6]=001 a[7]=000 a[8]=111 a[9]=001 
Resultado es: 111110101100011010001000111001
============= Arreglo ====================
a[0]=00001 a[1]=10011 a[2]=11000 a[3]=10001 a[4]=11111 a[5]=11010 
Resultado es: 11001111000100011111111010
============= Arreglo ====================
a[0]=101011000 a[1]=101101011 a[2]=001010000 
Resultado es: 101011000101101011001010000


Tests de 100000000 llamadas aleatorias a comprimir

Bien, felicitaciones
==== run ====
gcc -O -DOPT=1 -Wall -Werror -pedantic -std=c2x -Wno-unused-function  test-comprimir.c comprimir.c -lm -o comprimir.bin
Midiendo cuanto demora la solucion del profesor
rm -f tiempo-ref.txt
chmod +x prof.ref-x86_64
./prof.ref-x86_64 ref > /dev/null
Tiempos de referencia =  1244
Verificando y comparando con su solucion
./comprimir.bin 1244
Tests unitarios
============= Arreglo ====================
a[0]=0 a[1]=0 a[2]=0 a[3]=0 a[4]=0 a[5]=0 a[6]=0 a[7]=0 a[8]=0 a[9]=0 a[10]=0 a[11]=0 a[12]=0 a[13]=0 a[14]=0 a[15]=0 a[16]=0 a[17]=0 a[18]=0 a[19]=0 a[20]=0 a[21]=0 a[22]=0 a[23]=0 a[24]=0 a[25]=0 a[26]=0 a[27]=0 a[28]=0 a[29]=0 a[30]=0 a[31]=0 
Resultado es: 0
============= Arreglo ====================
a[0]=00 a[1]=00 a[2]=00 a[3]=00 a[4]=00 a[5]=00 a[6]=00 a[7]=00 a[8]=00 a[9]=00 a[10]=00 a[11]=00 a[12]=00 a[13]=00 a[14]=00 a[15]=00 
Resultado es: 0
============= Arreglo ====================
a[0]=000 a[1]=000 a[2]=000 a[3]=000 a[4]=000 a[5]=000 a[6]=000 a[7]=000 a[8]=000 a[9]=000 
Resultado es: 0
============= Arreglo ====================
a[0]=00000000000000000000000000000000 
Resultado es: 0
============= Arreglo ====================
a[0]=1 a[1]=1 a[2]=1 a[3]=1 a[4]=1 a[5]=1 a[6]=1 a[7]=1 a[8]=1 a[9]=1 a[10]=1 a[11]=1 a[12]=1 a[13]=1 a[14]=1 a[15]=1 a[16]=1 a[17]=1 a[18]=1 a[19]=1 a[20]=1 a[21]=1 a[22]=1 a[23]=1 a[24]=1 a[25]=1 a[26]=1 a[27]=1 a[28]=1 a[29]=1 a[30]=1 a[31]=1 
Resultado es: 11111111111111111111111111111111
============= Arreglo ====================
a[0]=1111111 a[1]=1111111 a[2]=1111111 a[3]=1111111 
Resultado es: 1111111111111111111111111111
============= Arreglo ====================
a[0]=11111111111111111111111 
Resultado es: 11111111111111111111111
============= Arreglo ====================
a[0]=11111111111111111111111111111111 
Resultado es: 11111111111111111111111111111111
============= Arreglo ====================
a[0]=0000 a[1]=0001 a[2]=0011 a[3]=0010 a[4]=0101 a[5]=0111 a[6]=1100 a[7]=1111 
Resultado es: 1001100100101011111001111
============= Arreglo ====================
a[0]=111 a[1]=110 a[2]=101 a[3]=100 a[4]=011 a[5]=010 a[6]=001 a[7]=000 a[8]=111 a[9]=001 
Resultado es: 111110101100011010001000111001
============= Arreglo ====================
a[0]=00001 a[1]=10011 a[2]=11000 a[3]=10001 a[4]=11111 a[5]=11010 
Resultado es: 11001111000100011111111010
============= Arreglo ====================
a[0]=101011000 a[1]=101101011 a[2]=001010000 
Resultado es: 101011000101101011001010000


Tests de 100000000 llamadas aleatorias a comprimir

Benchmark de 100000000 llamadas a comprimir
Tiempo tomando por la solucion del profesor: 1244 milisegundos
Tiempo de cpu usado por su version: 1374 milisegundos
Porcentaje de sobrecosto: 10 %
Bien, felicitaciones
